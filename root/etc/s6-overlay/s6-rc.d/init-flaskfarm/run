#!/usr/bin/with-contenv bash

set -e

echo ""
echo "***** set environments *****"
echo ""
[[ ! -e "${FF_DATA}/config.json" ]] &&{
    cp /etc/flaskfarm/config.json "${FF_DATA}/config.json" && \
    chown abc:abc "${FF_DATA}/config.json"
}
FF_DEV="$(jq -r .FF_DEV ${FF_DATA}/config.json)"
printf "${FF_DEV}" > /var/run/s6/container_environment/FF_DEV
FF_REPO="$(jq -r .FF_REPO ${FF_DATA}/config.json)"
printf "${FF_REPO}" > /var/run/s6/container_environment/FF_REPO
FF_SRC="$(jq -r .FF_SRC ${FF_DATA}/config.json)"
printf "${FF_SRC}" > /var/run/s6/container_environment/FF_SRC
FF_VENV="$(jq -r .FF_VENV ${FF_DATA}/config.json)"
printf "${FF_VENV}" > /var/run/s6/container_environment/FF_VENV
FF_CONFIG="$(jq -r .FF_CONFIG ${FF_DATA}/config.json)"
printf "${FF_CONFIG}" > /var/run/s6/container_environment/FF_CONFIG
FF_REQUIREMENTS_APT="$(jq -r .FF_REQUIREMENTS_APT[] ${FF_DATA}/config.json)"
printf "${FF_REQUIREMENTS_APT}" > /var/run/s6/container_environment/FF_REQUIREMENTS_APT
FF_REQUIREMENTS_PIP="$(jq -r .FF_REQUIREMENTS_PIP[] ${FF_DATA}/config.json)"
printf "${FF_REQUIREMENTS_PIP}" > /var/run/s6/container_environment/FF_REQUIREMENTS_PIP
FF_RUNNING_TYPE="$(jq -r .FF_RUNNING_TYPE ${FF_DATA}/config.json)"
printf "${FF_RUNNING_TYPE}" > /var/run/s6/container_environment/FF_RUNNING_TYPE
FF_RESTART_COUNT="0"
printf "${FF_RESTART_COUNT}" > /var/run/s6/container_environment/FF_RESTART_COUNT

echo ""
echo "***** copy files *****"
echo ""
[[ ! -e "${FF_CONFIG}" ]] && {
    cp /etc/flaskfarm/config.yaml "${FF_CONFIG}" && \
    chown abc:abc "${FF_CONFIG}"
}
[[ ! -e "${FF_DATA}/flaskfarm.code-workspace" ]] && {
    cp /etc/flaskfarm/flaskfarm.code-workspace "${FF_DATA}/flaskfarm.code-workspace" && \
    chown abc:abc "${FF_DATA}/flaskfarm.code-workspace"
}
[[ ! -e "${FF_DATA}/init" ]] && {
    cp /etc/flaskfarm/init "${FF_DATA}/init" && \
    chown abc:abc "${FF_DATA}/init"
}
[[ ! -e "${FF_DATA}/svc" ]] && {
    cp /etc/flaskfarm/svc "${FF_DATA}/svc" && \
    chown abc:abc "${FF_DATA}/svc"
}

source ${FF_DATA}/init